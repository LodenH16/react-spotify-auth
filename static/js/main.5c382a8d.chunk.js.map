{"version":3,"sources":["../../dist/spotify~bkRyBIbO.svg","TrackCard.jsx","../../src/Scopes.js","../../src/generateUrl.js","../../src/SpotifyAuth.jsx","App.js","index.js","examplePfp.jpg"],"names":["module","exports","TrackCard","props","style","width","className","src","track","album","images","url","waves","name","artists","map","artist","join","href","external_urls","spotify","scopes","SpotifyAuth","window","parts","item","initial","decodeURIComponent","event","clientID","redirectUri","getRedirectUri","isAuthenticatedWithSpotify","componentDidMount","accessToken","this","getHash","document","render","btnClassName","styles","onClick","alt","React","Component","t","onAccessToken","title","noLogo","bool","console","App","useState","spotifyAuthToken","setSpotifyAuthToken","useEffect","Cookies","get","Provider","value","user","data","maxWidth","padding","defaultPfp","display_name","type","tracks","loading","error","items","ind","remove","path","location","Scopes","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.5c382a8d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spotify~bkRyBIbO.9c3dc69e.svg\";","import React from 'react';\r\n\r\nimport { MDBCol, MDBCard, MDBCardImage, MDBCardBody, MDBCardTitle, MDBCardText, MDBBtn } from \"mdbreact\";\r\n\r\nconst TrackCard = (props) => {\r\n  return (\r\n    <MDBCol>\r\n      <MDBCard style={{ width: '22rem' }}>\r\n        <MDBCardImage\r\n          className='img-fluid'\r\n          src={props.track.album.images[0].url}\r\n          waves\r\n        />\r\n        <MDBCardBody>\r\n          <MDBCardTitle>{props.track.name}</MDBCardTitle>\r\n          <MDBCardText>\r\n            {props.track.artists.map(artist => artist.name).join(' ')} <br />\r\n            {props.track.album.name}\r\n          </MDBCardText>\r\n          <MDBBtn href={props.track.external_urls.spotify}>Listen on Spotify</MDBBtn>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBCol>\r\n  )\r\n}\r\n\r\nexport default TrackCard;\r\n","/**\n * List of all Spotify Scopes\n */\nconst scopes = {\n  // images\n  ugcImageUpload: 'ugc-image-upload',\n\n  // follow\n  userFollowRead: 'user-follow-read',\n  userFollowModify: 'user-follow-modify',\n\n  // listening history\n  userReadRecentlyPlayed: 'user-read-recently-played',\n  userTopRead: 'user-top-read',\n  userReadPlaybackPosition: 'user-read-playback-position',\n\n  // library\n  userLibraryRead: 'user-library-read',\n  userLibraryModify: 'user-library-modify',\n\n  // spotify connect\n  userReadPlaybackState: 'user-read-playback-state',\n  userReadCurrentlyPlaying: 'user-read-currently-playing',\n  userModifyPlaybackState: 'user-modify-playback-state',\n\n  // playlists\n  playlistReadCollaborative: 'playlist-read-collaborative',\n  playlistModifyPrivate: 'playlist-modify-private',\n  playlistModifyPublic: 'playlist-modify-public',\n  playlistReadPrivate: 'playlist-read-private',\n\n  // playback\n  streaming: 'streaming',\n  appRemoteControl: 'app-remote-control',\n\n  // users\n  userReadEmail: 'user-read-email',\n  userReadPrivate: 'user-read-private'\n}\n\nexport default scopes\n","const getRedirectUrl = (clientID, scopes, redirectUri) => {\n  return (\n    'https://accounts.spotify.com/authorize?response_type=token' +\n    `&client_id=${clientID}` +\n    `&scope=${scopes.join('%20')}` +\n    `&redirect_uri=${redirectUri}` +\n    '&show_dialog=true'\n  )\n}\n\nexport default getRedirectUrl\n","/**\n * @class SpotifyAuth\n */\n\nimport React, { Component } from 'react'\nimport scopes from './Scopes'\n// import hash from './hash'\nimport getRedirectUri from './generateUrl'\n\nimport styles from './SpotifyAuth.css'\nimport t from 'prop-types'\nimport SpotifyLogo from './spotify.svg'\n\nclass SpotifyAuth extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isAuthenticatedWithSpotify: false\n    }\n  }\n\n  getHash = () => {\n    return window\n      ? window.parent.location.hash\n          .substring(1)\n          .split('&')\n          .reduce((initial, item) => {\n            if (item) {\n              var parts = item.split('=')\n              initial[parts[0]] = decodeURIComponent(parts[1])\n            }\n            return initial\n          }, {})\n      : ''\n  }\n\n  componentDidMount() {\n    const accessToken = this.getHash().access_token\n\n    if (accessToken) {\n      // eslint-disable-next-line prettier/prettier\n      document.cookie = `spotifyAuthToken=${accessToken}; max-age=${60 * 60};`\n\n      this.props.onAccessToken(accessToken)\n    }\n  }\n\n  handleClick = (event) => {\n    event.preventDefault()\n\n    window.location = getRedirectUri(\n      this.props.clientID,\n      this.props.scopes,\n      this.props.redirectUri\n    )\n  }\n\n  render() {\n    return (\n      <button\n        className={this.props.btnClassName || styles.rsaSpotifyBtn}\n        onClick={(event) => this.handleClick(event)}\n      >\n        {!this.props.noLogo && (\n          <img\n            src={SpotifyLogo}\n            alt='Spotify Logo'\n            className={styles.rsaSpotifyLogo}\n          />\n        )}\n        <span>{this.props.title} </span>\n      </button>\n    )\n  }\n}\n\nSpotifyAuth.propTypes = {\n  /**\n   * Wao redirect URI\n   */\n  redirectUri: t.string.isRequired,\n  /**\n   * HEHEHEHEHEHEH\n   */\n  clientID: t.string.isRequired,\n  scopes: t.arrayOf(t.string),\n  onAccessToken: t.func,\n  title: t.string,\n  noLogo: t.bool\n}\n\nSpotifyAuth.defaultProps = {\n  redirectUri: 'http://localhost:3000/callback',\n  clientID: '1a70ba777fec4ffd9633c0c418bdcf39',\n  scopes: [scopes.userReadPrivate, scopes.userReadEmail],\n  onAccessToken: (token) => console.log('Access token: ', token),\n  title: 'Continue with Spotify',\n  noLogo: false\n}\n\nexport default SpotifyAuth\n","import React, { useEffect, useState } from 'react'\nimport { SpotifyApiContext, User, UserTop } from 'react-spotify-api'\nimport { MDBCol, MDBContainer, MDBRow, MDBCard, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBBtn } from \"mdbreact\";\nimport 'mdbreact/dist/css/mdb.css'\nimport Cookies from 'js-cookie'\n\n\nimport TrackCard from \"./TrackCard\";\nimport defaultPfp from './examplePfp.jpg';\nimport './App.css';\nimport './index.css';\n\nimport { SpotifyAuth, Scopes } from 'react-spotify-auth'\nimport 'react-spotify-auth/dist/index.css'\n\n\nconst dev = !process.env.NODE_ENV || process.env.NODE_ENV === 'development';\n\nconst App = () => {\n  const [spotifyAuthToken, setSpotifyAuthToken] = useState()\n\n  useEffect(() => {\n    setSpotifyAuthToken(Cookies.get('spotifyAuthToken'))\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [Cookies.get('spotifyAuthToken')])\n\n  const logout = () => {\n    Cookies.remove('spotifyAuthToken', { path: dev ? '' : 'react-spotify-auth' })\n    window.location = dev ? '/' : '/react-spotify-auth'\n  }\n\n  return (\n    <div className='app'>\n      <MDBContainer>\n        {/* If there is a cookie named 'spotifyAuthToken' */}\n        {Cookies.get('spotifyAuthToken') ? (\n          // Display the app\n          <>\n            <MDBRow>\n              <h1>Hi! How's it going?</h1>\n            </MDBRow>\n\n            <SpotifyApiContext.Provider value={spotifyAuthToken}>\n              <User>\n                {(user) =>\n                  user && user.data ? (\n                    <>\n                      <MDBCol style={{ maxWidth: '22rem', padding: '0 0 1rem 1rem' }}>\n                        <MDBCard>\n                          <MDBCardImage\n                            className='img-fluid'\n                            src={user.data.images[0] ? user.data.images[0].url : defaultPfp}\n                            alt='Your Spotify Profile Picture'\n                            waves\n                          />\n                          <MDBCardBody style={{ padding: '1rem' }}>\n                            <MDBCardTitle>\n                              Welcome, {user.data.display_name}\n                            </MDBCardTitle>\n                            <MDBCardText>\n                              Here's some of your top tracks, as listed by Spotify.\n                              </MDBCardText>\n                          </MDBCardBody>\n                        </MDBCard>\n                      </MDBCol>\n                    </>\n                  ) : (\n                      <p>Loading...</p>\n                    )\n                }\n              </User>\n\n              <MDBRow className=\"masonry-with-columns\">\n                <UserTop type=\"tracks\">\n                  {(tracks, loading, error) =>\n                    tracks && tracks.data ? (\n                      tracks.data.items.map((track, ind) => {\n                        return (\n                          <>\n                            <TrackCard\n                              track={track} />\n                          </>\n                        )\n                      })\n                    ) : null\n                  }\n                </UserTop>\n              </MDBRow>\n            </SpotifyApiContext.Provider>\n            <MDBBtn onClick={logout}>\n              Logout\n            </MDBBtn>\n          </>\n        ) : (\n            <div className=\"login-page\">\n              <h1>React Spotify Auth Demo</h1>\n              <h2>Sign in to get started</h2>\n              {/*  Display the login page */}\n\n              <div className=\"spotifyBtn\">\n                <SpotifyAuth\n                  redirectUri={dev ? 'http://localhost:3000/callback' : 'http://kevinjiang.ca/react-spotify-auth'}\n                  clientID='1a70ba777fec4ffd9633c0c418bdcf39'\n                  scopes={[Scopes.userReadPrivate, Scopes.userReadEmail, \"user-top-read\"]}\n                />\n              </div>\n            </div>\n          )}\n      </MDBContainer>\n    </div>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n","module.exports = __webpack_public_path__ + \"static/media/examplePfp.f6c53af4.jpg\";"],"sourceRoot":""}