{"version":3,"sources":["TrackCard.jsx","examplePfp.jpg","../../src/Scopes.js","../../src/SpotifyLogo.jsx","../../src/getHash.js","../../src/SpotifyAuth.jsx","../../src/generateUrl.js","../../src/SpotifyAuthListener.jsx","../../src/index.js","App.js","index.js"],"names":["TrackCard","props","style","width","className","src","track","album","images","url","waves","name","artists","map","artist","join","href","external_urls","spotify","scopes","ugcImageUpload","userFollowRead","userFollowModify","userReadRecentlyPlayed","userTopRead","userReadPlaybackPosition","userLibraryRead","userLibraryModify","userReadPlaybackState","userReadCurrentlyPlaying","userModifyPlaybackState","playlistReadCollaborative","playlistModifyPrivate","playlistModifyPublic","playlistReadPrivate","streaming","appRemoteControl","userReadEmail","userReadPrivate","allScopes","Object","sum","scope","SpotifyLogo","xmlns","viewBox","styles","d","t","string","getHash","window","initial","item","parts","decodeURIComponent","constructor","super","event","clientID","redirectUri","getRedirectUri","this","isAuthenticatedWithSpotify","componentDidMount","accessToken","document","render","btnClassName","onClick","handleClick","logoClassName","SpotifyAuth","onAccessToken","title","noLogo","noCookie","localStorage","bool","token","SpotifyAuthListener","useEffect","func","Scopes","App","useState","spotifyAuthToken","setSpotifyAuthToken","Cookies","get","console","log","all","Provider","value","user","data","maxWidth","padding","defaultPfp","alt","display_name","type","tracks","loading","error","items","ind","remove","path","location","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.c7c5eb00.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport { MDBCol, MDBCard, MDBCardImage, MDBCardBody, MDBCardTitle, MDBCardText, MDBBtn } from \"mdbreact\";\r\n\r\nconst TrackCard = (props) => {\r\n  return (\r\n    <MDBCol>\r\n      <MDBCard style={{ width: '22rem' }}>\r\n        <MDBCardImage\r\n          className='img-fluid'\r\n          src={props.track.album.images[0].url}\r\n          waves\r\n        />\r\n        <MDBCardBody>\r\n          <MDBCardTitle>{props.track.name}</MDBCardTitle>\r\n          <MDBCardText>\r\n            {props.track.artists.map(artist => artist.name).join(' ')} <br />\r\n            {props.track.album.name}\r\n          </MDBCardText>\r\n          <MDBBtn href={props.track.external_urls.spotify}>Listen on Spotify</MDBBtn>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBCol>\r\n  )\r\n}\r\n\r\nexport default TrackCard;\r\n","export default __webpack_public_path__ + \"static/media/examplePfp.e7162f89.jpg\";","/**\n * List of all Spotify Scopes\n */\nconst scopes = {\n  // images\n  ugcImageUpload: 'ugc-image-upload',\n\n  // follow\n  userFollowRead: 'user-follow-read',\n  userFollowModify: 'user-follow-modify',\n\n  // listening history\n  userReadRecentlyPlayed: 'user-read-recently-played',\n  userTopRead: 'user-top-read',\n  userReadPlaybackPosition: 'user-read-playback-position',\n\n  // library\n  userLibraryRead: 'user-library-read',\n  userLibraryModify: 'user-library-modify',\n\n  // spotify connect\n  userReadPlaybackState: 'user-read-playback-state',\n  userReadCurrentlyPlaying: 'user-read-currently-playing',\n  userModifyPlaybackState: 'user-modify-playback-state',\n\n  // playlists\n  playlistReadCollaborative: 'playlist-read-collaborative',\n  playlistModifyPrivate: 'playlist-modify-private',\n  playlistModifyPublic: 'playlist-modify-public',\n  playlistReadPrivate: 'playlist-read-private',\n\n  // playback\n  streaming: 'streaming',\n  appRemoteControl: 'app-remote-control',\n\n  // users\n  userReadEmail: 'user-read-email',\n  userReadPrivate: 'user-read-private'\n}\n\nexport const allScopes = (() => {\n  return Object.keys(scopes)\n    .reduce((sum, scope) => {\n      return sum.concat(scopes[scope], '%20')\n    }, '')\n    .slice(0, -3)\n})()\n\nexport default scopes\n","import React from 'react'\nimport styles from './SpotifyAuth.css'\nimport t from 'prop-types'\n\nconst SpotifyLogo = (props) => {\n  return (\n    <svg\n      xmlns='http://www.w3.org/2000/svg'\n      viewBox='0 0 496 512'\n      className={props.className || styles.rsaSpotifyLogo}\n    >\n      <path d='M248 8C111.1 8 0 119.1 0 256s111.1 248 248 248 248-111.1 248-248S384.9 8 248 8zm100.7 364.9c-4.2 0-6.8-1.3-10.7-3.6-62.4-37.6-135-39.2-206.7-24.5-3.9 1-9 2.6-11.9 2.6-9.7 0-15.8-7.7-15.8-15.8 0-10.3 6.1-15.2 13.6-16.8 81.9-18.1 165.6-16.5 237 26.2 6.1 3.9 9.7 7.4 9.7 16.5s-7.1 15.4-15.2 15.4zm26.9-65.6c-5.2 0-8.7-2.3-12.3-4.2-62.5-37-155.7-51.9-238.6-29.4-4.8 1.3-7.4 2.6-11.9 2.6-10.7 0-19.4-8.7-19.4-19.4s5.2-17.8 15.5-20.7c27.8-7.8 56.2-13.6 97.8-13.6 64.9 0 127.6 16.1 177 45.5 8.1 4.8 11.3 11 11.3 19.7-.1 10.8-8.5 19.5-19.4 19.5zm31-76.2c-5.2 0-8.4-1.3-12.9-3.9-71.2-42.5-198.5-52.7-280.9-29.7-3.6 1-8.1 2.6-12.9 2.6-13.2 0-23.3-10.3-23.3-23.6 0-13.6 8.4-21.3 17.4-23.9 35.2-10.3 74.6-15.2 117.5-15.2 73 0 149.5 15.2 205.4 47.8 7.8 4.5 12.9 10.7 12.9 22.6 0 13.6-11 23.3-23.2 23.3z' />\n    </svg>\n  )\n}\n\nSpotifyLogo.propTypes = {\n  className: t.string\n}\n\nexport default SpotifyLogo\n","export const getHash = () => {\n  return window\n    ? window.parent.location.hash\n        .substring(1)\n        .split('&')\n        .reduce((initial, item) => {\n          if (item) {\n            var parts = item.split('=')\n            initial[parts[0]] = decodeURIComponent(parts[1])\n          }\n          return initial\n        }, {})\n    : ''\n}\n","/**\n * @class SpotifyAuth\n */\n\nimport React, { Component } from 'react'\nimport scopes from './Scopes'\nimport getRedirectUri from './generateUrl'\n\nimport styles from './SpotifyAuth.css'\nimport t from 'prop-types'\nimport SpotifyLogo from './SpotifyLogo'\nimport { getHash } from './getHash'\n\nclass SpotifyAuth extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isAuthenticatedWithSpotify: false\n    }\n  }\n\n  componentDidMount() {\n    const accessToken = getHash().access_token\n\n    if (accessToken) {\n      if (!this.props.noCookie) {\n        document.cookie = `spotifyAuthToken=${accessToken}; max-age=${60 * 60};`\n      }\n      if (this.props.localStorage) {\n        window.localStorage.setItem('spotifyAuthToken', accessToken)\n      }\n      this.props.onAccessToken(accessToken)\n    }\n  }\n\n  handleClick = (event) => {\n    event.preventDefault()\n\n    window.location = getRedirectUri(\n      this.props.clientID,\n      this.props.scopes,\n      this.props.redirectUri\n    )\n  }\n\n  render() {\n    return (\n      <button\n        className={this.props.btnClassName || styles.rsaSpotifyBtn}\n        onClick={(event) => this.handleClick(event)}\n      >\n        {!this.props.noLogo && (\n          <SpotifyLogo className={this.props.logoClassName} />\n        )}\n        <span>{this.props.title}</span>\n      </button>\n    )\n  }\n}\n\nSpotifyAuth.propTypes = {\n  redirectUri: t.string.isRequired,\n  clientID: t.string.isRequired,\n  scopes: t.arrayOf(t.string),\n  onAccessToken: t.func,\n  logoClassName: t.string,\n  title: t.string,\n  noLogo: t.bool,\n  noCookie: t.bool,\n  localStorage: t.bool\n}\n\nSpotifyAuth.defaultProps = {\n  redirectUri: 'http://localhost:3000',\n  scopes: [scopes.userReadPrivate, scopes.userReadEmail],\n  onAccessToken: (token) => {},\n  title: 'Continue with Spotify',\n  localStorage: false,\n  noLogo: false,\n  noCookie: false\n}\n\nexport default SpotifyAuth\n","const getRedirectUrl = (clientID, scopes, redirectUri) => {\n  return (\n    'https://accounts.spotify.com/authorize?response_type=token' +\n    `&client_id=${clientID}` +\n    `&scope=${scopes.join('%20')}` +\n    `&redirect_uri=${redirectUri}` +\n    '&show_dialog=true'\n  )\n}\n\nexport default getRedirectUrl\n","import { useEffect } from 'react'\n\nimport { getHash } from './getHash'\nimport t from 'prop-types'\n\nconst SpotifyAuthListener = (props) => {\n  useEffect(() => {\n    const accessToken = getHash().access_token\n\n    if (accessToken) {\n      if (!props.noCookie) {\n        document.cookie = `spotifyAuthToken=${accessToken}; max-age=${60 * 60};`\n      }\n      if (props.localStorage) {\n        window.localStorage.setItem('spotifyAuthToken', accessToken)\n      }\n      props.onAccessToken(accessToken)\n    }\n  }, [])\n\n  return null\n}\n\nSpotifyAuthListener.propTypes = {\n  noCookie: t.bool,\n  localStorage: t.bool,\n  onAccessToken: t.func\n}\n\nSpotifyAuthListener.defaultProps = {\n  noCookie: false,\n  localStorage: false,\n  onAccessToken: (token) => {}\n}\n\nexport default SpotifyAuthListener\n","import Scopes, { allScopes } from './Scopes'\nimport SpotifyAuth from './SpotifyAuth'\nimport SpotifyAuthListener from './SpotifyAuthListener'\n\nScopes.all = allScopes\n\nexport { Scopes, SpotifyAuth, SpotifyAuthListener }\n","import React, { useEffect, useState } from 'react'\nimport { SpotifyApiContext, User, UserTop } from 'react-spotify-api'\nimport {\n  MDBCol,\n  MDBContainer,\n  MDBRow,\n  MDBCard,\n  MDBCardBody,\n  MDBCardImage,\n  MDBCardTitle,\n  MDBCardText,\n  MDBBtn\n} from 'mdbreact'\nimport 'mdbreact/dist/css/mdb.css'\nimport Cookies from 'js-cookie'\n\nimport TrackCard from './TrackCard'\nimport defaultPfp from './examplePfp.jpg'\nimport './App.css'\nimport './index.css'\n\nimport { SpotifyAuth, Scopes } from 'react-spotify-auth'\nimport 'react-spotify-auth/dist/index.css'\n\nconst dev = !process.env.NODE_ENV || process.env.NODE_ENV === 'development'\n\nconst App = () => {\n  const [spotifyAuthToken, setSpotifyAuthToken] = useState()\n\n  useEffect(() => {\n    setSpotifyAuthToken(Cookies.get('spotifyAuthToken'))\n    console.log(Scopes.all)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [Cookies.get('spotifyAuthToken')])\n\n  const logout = () => {\n    Cookies.remove('spotifyAuthToken', {\n      path: dev ? '' : 'react-spotify-auth'\n    })\n    window.location = dev ? '/' : '/react-spotify-auth'\n  }\n\n  return (\n    <div className='app'>\n      <MDBContainer>\n        {/* If there is a cookie named 'spotifyAuthToken' */}\n        {Cookies.get('spotifyAuthToken') ? (\n          // Display the app\n          <>\n            <MDBRow>\n              <h1>Hi! How's it going?</h1>\n            </MDBRow>\n\n            <SpotifyApiContext.Provider value={spotifyAuthToken}>\n              <User>\n                {(user) =>\n                  user && user.data ? (\n                    <>\n                      <MDBCol\n                        style={{ maxWidth: '22rem', padding: '0 0 1rem 1rem' }}\n                      >\n                        <MDBCard>\n                          <MDBCardImage\n                            className='img-fluid'\n                            src={\n                              user.data.images[0]\n                                ? user.data.images[0].url\n                                : defaultPfp\n                            }\n                            alt='Your Spotify Profile Picture'\n                            waves\n                          />\n                          <MDBCardBody style={{ padding: '1rem' }}>\n                            <MDBCardTitle>\n                              Welcome, {user.data.display_name}\n                            </MDBCardTitle>\n                            <MDBCardText>\n                              Here's some of your top tracks, as listed by\n                              Spotify.\n                            </MDBCardText>\n                          </MDBCardBody>\n                        </MDBCard>\n                      </MDBCol>\n                    </>\n                  ) : (\n                    <p>Loading...</p>\n                  )\n                }\n              </User>\n              <div style={{ width: '100%' }}>\n                <MDBRow className='masonry-with-columns'>\n                  <UserTop type='tracks'>\n                    {(tracks, loading, error) =>\n                      tracks && tracks.data\n                        ? tracks.data.items.map((track, ind) => {\n                            return (\n                              <>\n                                <TrackCard track={track} />\n                              </>\n                            )\n                          })\n                        : null\n                    }\n                  </UserTop>\n                </MDBRow>\n              </div>\n            </SpotifyApiContext.Provider>\n            <MDBBtn onClick={logout}>Logout</MDBBtn>\n          </>\n        ) : (\n          <div className='login-page'>\n            <h1>React Spotify Auth Demo</h1>\n            <h2>Sign in to get started</h2>\n            {/*  Display the login page */}\n\n            <div className='spotifyBtn'>\n              <SpotifyAuth\n                redirectUri={\n                  dev\n                    ? 'http://localhost:3000/callback'\n                    : 'http://kevinjiang.ca/react-spotify-auth'\n                }\n                clientID='1a70ba777fec4ffd9633c0c418bdcf39'\n                scopes={[\n                  Scopes.userReadPrivate,\n                  Scopes.userReadEmail,\n                  'user-top-read'\n                ]}\n              />\n            </div>\n          </div>\n        )}\n      </MDBContainer>\n    </div>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}